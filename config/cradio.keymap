// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Layers

#define LBASE 0
#define LNUMBER 1
#define LSYMBOL 2
#define LNAV 3
#define LMOUSE 4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        lht: layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&mo>, <&to>;
        };

        mm_period: mod_morph_period {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_bspc: mod_morph_bspc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        mm_space: mod_morph_space {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp TAB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        wrkspc_left: workspace_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LEFT_CONTROL>
                , <&macro_press   &kp LEFT_ALT>
                , <&macro_press   &msc SCRL_UP>
                , <&macro_wait_time 500>
                , <&macro_release &kp SCRL_UP>
                , <&macro_release &kp LEFT_ALT>
                , <&macro_release &kp LEFT_CONTROL>
                ;
        };

        wrkspc_right: workspace_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LEFT_CONTROL>
                , <&macro_press   &kp LEFT_ALT>
                , <&macro_press   &msc SCRL_DOWN>
                , <&macro_wait_time 500>
                , <&macro_release &kp SCRL_DOWN>
                , <&macro_release &kp LEFT_ALT>
                , <&macro_release &kp LEFT_CONTROL>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <80>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_lbase {
            timeout-ms = <80>;
            key-positions = <31 32>;
            bindings = <&to LBASE>;
        };

        combo_caps {
            bindings = <&kp CLCK>;
            key-positions = <33 30>;
        };

        PrtSc {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <8 9>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp Q       &kp W       &kp F        &kp P              &kp B        &kp J     &kp L                &kp U        &kp Y           &kp SQT
&ht LGUI A  &ht LALT R  &ht LCTRL S  &ht LSHFT T        &kp G        &kp M     &ht RSHFT N          &ht LCTRL E  &ht LEFT_ALT I  &ht LEFT_GUI O
&kp Z       &kp X       &kp C        &kp D              &kp V        &kp K     &kp H                &kp COMMA    &mm_period      &kp ENTER
                                     &lht LNAV LNUMBER  &mm_space    &mm_bspc  &lht LMOUSE LSYMBOL
            >;
        };

        number_layer {
            bindings = <
&kp F1       &kp F2           &kp F3        &kp F4           &kp LA(F4)    &none       &kp N7                    &kp N8                &kp N9                  &trans
&ht LGUI F5  &ht LEFT_ALT F6  &ht LCTRL F7  &ht LSHIFT F8    &kp TAB       &kp DEL     &ht RIGHT_SHIFT NUMBER_4  &ht RIGHT_CONTROL N5  &ht RIGHT_ALT NUMBER_6  &ht RIGHT_GUI N0
&kp F9       &kp F10          &kp F11       &kp F12          &kp LA(F2)    &kp PERIOD  &kp N1                    &kp N2                &kp NUMBER_3            &trans
                                            &lht LNAV LBASE  &trans        &trans      &trans
            >;
        };

        symbol_layer {
            bindings = <
&kp EXCLAMATION  &kp AT            &kp HASH        &kp DOLLAR            &kp PERCENT    &kp CARET   &kp AMPERSAND          &kp ASTERISK     &kp TILDE          &kp GRAVE
&kp LESS_THAN    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp TAB        &kp DELETE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp GREATER_THAN
&kp SEMICOLON    &kp COLON         &kp BSLH        &kp MINUS             &kp PLUS       &kp EQUAL   &kp UNDER              &kp SLASH        &kp PIPE           &trans
                                                   &trans                &trans         &trans      &lht LMOUSE LBASE
            >;
        };

        navigation_layer {
            bindings = <
&none     &none     &none      &none      &none     &kp HOME      &kp PAGE_UP    &kp UP    &none      &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &wrkspc_left  &kp LEFT       &kp DOWN  &kp RIGHT  &wrkspc_right
&none     &none     &none      &none      &none     &kp END       &kp PAGE_DOWN  &none     &none      &none
                               &trans     &trans    &trans        &trans
            >;
        };

        mouse_layer {
            bindings = <
&none  &none           &mmv MOVE_UP    &none            &none     &none           &msc SCRL_UP    &none      &none      &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none     &msc SCRL_LEFT  &mkp LCLK       &mkp RCLK  &mkp MCLK  &msc SCRL_RIGHT
&none  &none           &none           &none            &none     &none           &msc SCRL_DOWN  &none      &none      &none
                                       &trans           &trans    &trans          &trans
            >;
        };
    };
};
